# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8 pytest-flask
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
        SQLALCHEMY_DATABASE_URI: ${{ secrets.TWILIO_ACCOUNT_SID }}
        ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        APP_NAME: ${{ secrets.APP_NAME }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        GHOST_BASE_URL: ${{ secrets.GHOST_BASE_URL }}
        GHOST_CLIENT_ID: ${{ secrets.GHOST_CLIENT_ID }}
        GHOST_ADMIN_API_KEY: ${{ secrets.GHOST_ADMIN_API_KEY }}
        GHOST_API_USERNAME: ${{ secrets.GHOST_API_USERNAME }}
        GHOST_API_PASSWORD: ${{ secrets.GHOST_API_PASSWORD }}
        GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
        GCP_BUCKET_URL: ${{ secrets.GCP_BUCKET_URL }}
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
        GCP_BIGQUERY_TABLE: ${{ secrets.GCP_BIGQUERY_TABLE }}
        GCP_BIGQUERY_DATASET: ${{ secrets.GCP_BIGQUERY_DATASET }}
      run: |
        pytest
